// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Report.DataAccess.EntityFramework;

namespace Report.DataAccess.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Report.Entity.ReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReportStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Hazırlanıyor"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Tamamlandı"
                        });
                });

            modelBuilder.Entity("Report.Entity.Reports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReportDemandDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ReportStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportStatusId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            Location = "Ankara",
                            PersonId = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            PhoneNumber = "555",
                            ReportDemandDate = new DateTime(2021, 9, 11, 0, 29, 41, 912, DateTimeKind.Local).AddTicks(2151),
                            ReportStatusId = 1
                        });
                });

            modelBuilder.Entity("Report.Entity.Reports", b =>
                {
                    b.HasOne("Report.Entity.ReportStatus", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
